<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--  namespace 지정-->
<mapper namespace="mapper.member">
<!-- memberVO에 저장 -->
	<resultMap id="memResult" type="memberVO">
	 <result property="id" column="id" />
	 <result property="pwd" column="pwd" />
	 <result property="name" column="name" />
	 <result property="email" column="email" />
	 <result property="joinDate" column="joinDate" />
	</resultMap>
	
	<!-- <resultMap id="memResult" type="java.util.HashMap">
	 <result property="id" column="id" />
	 <result property="pwd" column="pwd" />
	 <result property="name" column="name" />
	 <result property="email" column="email" />
	 <result property="joinDate" column="joinDate" />
	</resultMap> -->
	<!--id를 가지고 DAO에서 호출하고, 반환되는 값들을 resultMap에 넣어준다-->
	<select id="selectAllMemberList" resultMap="memResult" >
	 <![CDATA[
	 	select * from t_member order by joinDate desc
	 ]]>
	</select>
	<!-- parameterType = sql문 호출시 전달되는 매개변수의 데이터 타입을 지정-->	
	
		<select id="selectMemberById" resultType="memberVO"  parameterType="String" >
      <![CDATA[
         select * from t_member
         where
         id=#{id}			
      ]]>
	 </select>	
	<!-- MemberDAO에서 접근시 사용할 SQL문의 id를 지정 resultType으로 int 지정-->
	<select id="selectMemberByPwd" resultMap="memResult"  parameterType="int" >
      <![CDATA[
         select * from t_member
         where
         pwd = #{pwd}			
      ]]>
    </select>
    <insert id="insertMember" parameterType="memberVO">
     <![CDATA[
     	insert into t_member(id, pwd, name, email)
     	values(#{id}, #{pwd}, #{name}, #{email})
     ]]>
    </insert>
    <insert id="insertMember2" parameterType="java.util.HashMap">
     <![CDATA[
     	insert into t_member (id, pwd, name, email)
     	values(#{id}, #{pwd}, #{name}, #{email})
     ]]>
    </insert>
    <update id="updateMember" parameterType="memberVO">
     <![CDATA[
     	update t_member
     	set pwd=#{pwd}, name=#{name}, email=#{email}
     	where id=#{id}
     ]]>
    </update>
    <delete id="deleteMember" parameterType="String">
     <![CDATA[
     	delete from t_member
     	where
     	id=#{id}
     ]]>
    </delete>
    <sql id="a">
     <![CDATA[
      select * from t_member
     ]]>
    </sql>
    <select id="searchMember" parameterType="memberVO" resultMap="memResult">
	 <include refid="a" />
     <!-- <where>
      <if test="name != '' and name != null">
        name = #{name}
      </if>
      <if test="email != '' and email != null ">
        and email = #{email}
      </if>
     </where> -->
     <where>
      <choose>
       <when test="name != '' and name != null and email != '' and email != null">
        name=#{name} and email=#{email}
       </when>
       <when test="name != '' and name != null">
        name=#{name}
       </when>
       <when test="email != '' and email != null">
        email=#{email}
       </when>
      </choose>
     </where>
     order by joinDate desc
    </select>
    
    
    <select id="foreachSelect" resultMap="memResult" parameterType="java.util.Map">
    	<include refid="a" />
     where name in
     <foreach item="item" collection="list" open="(" separator="," close=")">
      #{item}
     </foreach>
     order by joinDate desc
    </select>
    <insert id="foreachInsert" parameterType="java.util.Map">
     <foreach item="item" collection="list" open="INSERT ALL" separator=" " close="SELECT * FROM DUAL">
      INTO t_member(id, pwd, name, email)
      VALUES (#{item.id}, #{item.pwd}, #{item.name}, #{item.email})
     </foreach>
    </insert>
</mapper>